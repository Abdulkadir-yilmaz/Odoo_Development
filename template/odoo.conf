[options]
; ===================
; | Common options) |
; ===================
; ------
; --without-demo | set to all in production environments so that new databases don't have demo data on them
; ------
; without_demo = all

; ------
; --pidfile | file where the server pid will be stored
; ------
; pidfile = 

; ------
; --addons-path | type = string | specify additional addons paths (separated by commas).
; ------
addons_path = /opt/odoo/odoo16/odoo/addons,/opt/odoo/odoo16/odoo-custom-addons,/opt/odoo/odoo16/odoo-custom-addons/crypto-wallet 

; ------
; --load | Comma-separated list of server-wide modules.
; ------
; server_wide_modules = base,web

; ------
; -D / --data-dir | Directory where to store Odoo data
; ------
data_dir = /etc/odoo

admin_passwd = StrongRandomPassword

; ==============================
; | HTTP Service Configuration |
; ==============================
; ------
; --http-interface | Listen interface address for HTTP services. Keep empty to listen on all interfaces (0.0.0.0)  For a deployment behind a reverse proxy, this can be set to the reverse proxy address so that only requests from there are considered. 
;                    Use 127.0.0.1 if the reverse proxy is in the same server as the Odoo service.
; ------
; http_interface = 127.0.0.1

; ------
; -p / --http-port | type = int | Listen port for the main HTTP service
; ------
; http_port = 8069

; ------
; --longpolling-port | type = int | Listen port for the longpolling HTTP service
; ------
; longpolling_port = 8072

; ------
; --no-http | Disable the HTTP and Longpolling services entirely
; ------
; http_enable = True

; ------
; --proxy-mode | Activate reverse proxy WSGI wrappers (headers rewriting) Only enable this when running behind a trusted web proxy!
;                This should be set to True when Odoo is accessed behind a reverse proxy
; ------
; proxy_mode = True


; =========================
; | Logging Configuration |
; =========================
; ------
; --logfile | file where the server log will be stored
; ------
logfile = /var/log/odoo/odoo-server.log

; ------
; --syslog | Send the log to the syslog server
; ------
; syslog = 

; ------
; --log-handler | setup a handler at LEVEL for a given PREFIX. An empty PREFIX indicates the root logger. This option can be repeated. Example: "odoo.orm:DEBUG" or "werkzeug:CRITICAL" (default: ":INFO")
; ------
; None = :INFO

; ------
; --log-request | shortcut for --log-handler=odoo.http.rpc.request:DEBUG
; ------
; log_handler = 

; ------
; --log-response | shortcut for --log-handler=odoo.http.rpc.response:DEBUG
; ------
; log_handler = 

; ------
; --log-web | shortcut for --log-handler=odoo.http:DEBUG
; ------
; log_handler = 

; ------
; --log-sql | shortcut for --log-handler=odoo.sql_db:DEBUG
; ------
; log_handler = 

; ------
; --log-db | Logging database
; ------
; log_db = 

; ------
; --log-db-level | Logging database level
; ------
; log_db_level = warning

; ------
; --log-level | type = choice | choices = ['info', 'debug_rpc', 'warn', 'test', 'critical', 'runbot', 'debug_sql', 'error', 'debug', 'debug_rpc_answer', 'notset'] | specify the level of the logging. Accepted values: ['info', 'debug_rpc', 'warn', 'test', 'critical', 'runbot', 'debug_sql', 'error', 'debug', 'debug_rpc_answer', 'notset'].
; ------
; log_level = info

; ======================
; | SMTP Configuration |
; ======================
; ------
; --email-from | specify the SMTP email address for sending email
; ------
; email_from = 

; ------
; --smtp | specify the SMTP server for sending email
; ------
; smtp_server = localhost

; ------
; --smtp-port | type = int | specify the SMTP port
; ------
; smtp_port = 25

; ------
; --smtp-ssl | if passed, SMTP connections will be encrypted with SSL (STARTTLS)
; ------
; smtp_ssl = 

; ------
; --smtp-user | specify the SMTP username for sending email
; ------
; smtp_user = 

; ------
; --smtp-password | specify the SMTP password for sending email
; ------
; smtp_password = 

; ============================
; | Database related options |
; ============================

; ------
; --db-filter | Regular expressions for filtering available databases for Web UI. The expression can use %d (domain) and %h (host) placeholders.
;               It should be set with ^dbname$ 
; ------
; dbfilter = ^odoo-prod$


; ------
; --db_name | specify the pg executable path
; ------
db_name= odoo-prod

; ------
; --db_port | type = int | specify the database port
; ------
; db_port = 

; ------
; --db_sslmode | type = choice | choices = ['disable', 'allow', 'prefer', 'require', 'verify-ca', 'verify-full'] | specify the database ssl connection mode (see PostgreSQL documentation)
; ------
; db_sslmode = prefer

; ------
; --db_maxconn | type = int | specify the maximum number of physical connections to PostgreSQL
; ------
; db_maxconn = 64

; ------
; --no-database-list | Disable the ability to obtain or view the list of databases. Also disable access to the database manager and selector, so be sure to set a proper --database parameter first
; ------
; list_db = False

; ====================
; | Advanced options |
; ====================

; ------
; --osv-memory-count-limit | type = int | Force a limit on the maximum number of records kept in the virtual osv_memory tables. The default is False, which means no count-based limit.
; ------
; osv_memory_count_limit = 

; ------
; --transient-age-limit | type = float | Time limit (decimal value in hours) records created with a TransientModel (mosly wizard) are kept in the database. Default to 1 hour.
; ------
; transient_age_limit = 1.0

; ------
; --osv-memory-age-limit | type = float | Deprecated alias to the transient-age-limit option
; ------
; osv_memory_age_limit = 

; ------
; --max-cron-threads | type = int | Maximum number of threads processing concurrently cron jobs (default 2).
; ------
; max_cron_threads = 2

; ------
; --geoip-db | Absolute path to the GeoIP database file.
; ------
; geoip_database = /usr/share/GeoIP/GeoLite2-City.mmdb

; ===========================
; | Multiprocessing options |
; ===========================
; ------
; --workers | type = int | Specify the number of workers, 0 disable prefork mode. This, with a value of two or more, enables the multiprocessing mode.
; ------
; workers = 6

; ------
; --limit-memory-soft | type = int | Maximum allowed virtual memory per worker (in bytes), when reached the worker be reset after the current request (default 2048MiB).
; ------
; limit_memory_soft = 2147483648

; ------
; --limit-memory-hard | type = int | Maximum allowed virtual memory per worker (in bytes), when reached, any memory allocation will fail (default 2560MiB).
; ------
; limit_memory_hard = 2684354560

; ------
; --limit-time-cpu | type = int | Maximum allowed CPU time per request (default 60).
; ------
; limit_time_cpu = 600

; ------
; --limit-time-real | type = int | Maximum allowed Real time per request (default 120).
; ------
; limit_time_real = 1200

; ------
; --limit-time-real-cron | type = int | Maximum allowed Real time per cron job. (default: --limit-time-real). Set to 0 for no limit.
; ------
; limit_time_real_cron = -1

; ------
; --limit-request | type = int | Maximum number of request to be processed per worker (default 8192).
; ------
; limit_request = 8192
